# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.11.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from .mylabel import myLabel
from .mytreeview import myTreeview

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(894, 624)
        MainWindow.setFixedSize(894, 624)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.widget = QtWidgets.QWidget(self.centralWidget)
        self.widget.setGeometry(QtCore.QRect(10, 0, 641, 381))
        self.widget.setStyleSheet("background-color: rgb(211, 215, 207);")
        self.widget.setObjectName("widget")
        self.code_edit = QtWidgets.QTextEdit(self.widget)
        self.code_edit.setGeometry(QtCore.QRect(10, 10, 621, 361))
        self.code_edit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.code_edit.setObjectName("code_edit")
        self.widget_2 = QtWidgets.QWidget(self.centralWidget)
        self.widget_2.setGeometry(QtCore.QRect(660, 0, 221, 561))
        self.widget_2.setStyleSheet("background-color: rgb(211, 215, 207);")
        self.widget_2.setObjectName("widget_2")
        self.treeView = myTreeview(self.widget_2)
        self.treeView.setGeometry(QtCore.QRect(10, 10, 201, 531))
        self.treeView.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.treeView.setObjectName("treeView")
        self.tabWidget = QtWidgets.QTabWidget(self.centralWidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 390, 641, 171))
        self.tabWidget.setStyleSheet("background-color: rgb(211, 215, 207);")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.output = QtWidgets.QTextEdit(self.tab)
        self.output.setGeometry(QtCore.QRect(0, 0, 641, 151))
        self.output.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.output.setObjectName("output")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.shell = QtWidgets.QTextEdit(self.tab_2)
        self.shell.setGeometry(QtCore.QRect(0, 0, 641, 141))
        self.shell.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.shell.setObjectName("shell")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.viewer = myLabel(self.tab_3)
        self.viewer.setGeometry(QtCore.QRect(0, 0, 641, 151))
        self.viewer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.viewer.setText("")
        self.viewer.setObjectName("viewer")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 894, 28))
        self.menuBar.setObjectName("menuBar")
        self.menu = QtWidgets.QMenu(self.menuBar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menuBar)
        self.menu_2.setObjectName("menu_2")
        self.menua = QtWidgets.QMenu(self.menuBar)
        self.menua.setObjectName("menua")
        MainWindow.setMenuBar(self.menuBar)
        self.mainToolBar = QtWidgets.QToolBar(MainWindow)
        self.mainToolBar.setObjectName("mainToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.action_open = QtWidgets.QAction(MainWindow)
        self.action_open.setObjectName("action_open")
        self.action_close = QtWidgets.QAction(MainWindow)
        self.action_close.setObjectName("action_close")
        self.action_save = QtWidgets.QAction(MainWindow)
        self.action_save.setObjectName("action_save")
        self.action_save_as = QtWidgets.QAction(MainWindow)
        self.action_save_as.setObjectName("action_save_as")
        self.action_samples = QtWidgets.QAction(MainWindow)
        self.action_samples.setObjectName("action_samples")
        self.action_cmp_str = QtWidgets.QAction(MainWindow)
        self.action_cmp_str.setObjectName("action_cmp_str")
        self.action_cmp_cfg = QtWidgets.QAction(MainWindow)
        self.action_cmp_cfg.setObjectName("action_cmp_cfg")
        self.action_cmp_cfg_2 = QtWidgets.QAction(MainWindow)
        self.action_cmp_cfg_2.setObjectName("action_cmp_cfg_2")
        self.action_stack = QtWidgets.QAction(MainWindow)
        self.action_stack.setObjectName("action_stack")
        self.action_heap = QtWidgets.QAction(MainWindow)
        self.action_heap.setObjectName("action_heap")
        self.action_int_width = QtWidgets.QAction(MainWindow)
        self.action_int_width.setObjectName("action_int_width")
        self.action_int_calcu = QtWidgets.QAction(MainWindow)
        self.action_int_calcu.setObjectName("action_int_calcu")
        self.action_int_sign = QtWidgets.QAction(MainWindow)
        self.action_int_sign.setObjectName("action_int_sign")
        self.action_str = QtWidgets.QAction(MainWindow)
        self.action_str.setObjectName("action_str")
        self.action_nullp = QtWidgets.QAction(MainWindow)
        self.action_nullp.setObjectName("action_nullp")
        self.action_samep = QtWidgets.QAction(MainWindow)
        self.action_samep.setObjectName("action_samep")
        self.action_checkall = QtWidgets.QAction(MainWindow)
        self.action_checkall.setObjectName("action_checkall")
        self.action_checkdir = QtWidgets.QAction(MainWindow)
        self.action_checkdir.setObjectName("action_checkdir")
        self.menu.addAction(self.action_open)
        self.menu.addAction(self.action_close)
        self.menu.addAction(self.action_save)
        self.menu.addAction(self.action_save_as)
        self.menu_2.addAction(self.action_samples)
        self.menu_2.addAction(self.action_cmp_str)
        self.menu_2.addAction(self.action_cmp_cfg)
        self.menu_2.addAction(self.action_cmp_cfg_2)
        self.menua.addAction(self.action_stack)
        self.menua.addAction(self.action_heap)
        self.menua.addAction(self.action_int_width)
        self.menua.addAction(self.action_int_calcu)
        self.menua.addAction(self.action_int_sign)
        self.menua.addAction(self.action_str)
        self.menua.addAction(self.action_nullp)
        self.menua.addAction(self.action_samep)
        self.menua.addAction(self.action_checkall)
        self.menua.addAction(self.action_checkdir)
        self.menuBar.addAction(self.menu.menuAction())
        self.menuBar.addAction(self.menu_2.menuAction())
        self.menuBar.addAction(self.menua.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CodeCheker"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "检测输出"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", " 终端shell"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "cfg图"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.menu_2.setTitle(_translate("MainWindow", "同源性检测"))
        self.menua.setTitle(_translate("MainWindow", "漏洞检测"))
        self.action_open.setText(_translate("MainWindow", "打开"))
        self.action_close.setText(_translate("MainWindow", "关闭"))
        self.action_save.setText(_translate("MainWindow", "保存"))
        self.action_save_as.setText(_translate("MainWindow", "另存为"))
        self.action_samples.setText(_translate("MainWindow", "选择样本库"))
        self.action_cmp_str.setText(_translate("MainWindow", "基于字符串检测"))
        self.action_cmp_cfg.setText(_translate("MainWindow", "基于cfg图检测"))
        self.action_cmp_cfg_2.setText(_translate("MainWindow", "跨语言cfg检测"))
        self.action_stack.setText(_translate("MainWindow", "栈缓冲区溢出检测"))
        self.action_heap.setText(_translate("MainWindow", "堆缓冲区溢出检测"))
        self.action_int_width.setText(_translate("MainWindow", "整数宽度溢出检测"))
        self.action_int_calcu.setText(_translate("MainWindow", "整数运算溢出检测"))
        self.action_int_sign.setText(_translate("MainWindow", "整数符号溢出检测"))
        self.action_str.setText(_translate("MainWindow", "格式化字符串漏洞"))
        self.action_nullp.setText(_translate("MainWindow", "空指针引用检测"))
        self.action_samep.setText(_translate("MainWindow", "竞争引用检测"))
        self.action_checkall.setText(_translate("MainWindow", "全部检测"))
        self.action_checkdir.setText(_translate("MainWindow", "检测文件夹"))

